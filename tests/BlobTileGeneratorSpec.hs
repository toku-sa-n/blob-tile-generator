module BlobTileGeneratorSpec
    ( spec
    ) where

import           BlobTileGenerator       (generateBlobTile)
import           Codec.Picture           (convertRGBA8, readImage)
import           Data.Either.Combinators (fromRight')
import           Test.Hspec              (Spec, describe, it, runIO)

spec :: Spec
spec = testGenerateBlobTile

testGenerateBlobTile :: Spec
testGenerateBlobTile = do
    input <- readImage' "tests/input.png"
    expected <- readImage' "tests/expected.png"
    describe "generateBlobTile" $
        it
            "returns a Just value containing a blob tile generated by the passed 1x5 tile image" $
        generateBlobTile input == Just expected
  where
    readImage' = runIO . fmap (convertRGBA8 . fromRight') . readImage
